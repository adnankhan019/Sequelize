
**Users Table:**

```plaintext
| id | name   |
|----|--------|
| 1  | Alice  |
| 2  | Bob    |
| 3  | Charlie|
```

**Posts Table:**

```plaintext
| id | title          | userId |
|----|----------------|--------|
| 1  | First Post     | 1      |
| 2  | Second Post    | 1      |
| 3  | Third Post     | 2      |
| 4  | Fourth Post    | 3      |
```

**Comments Table:** (for the multiple joins example)

```plaintext
| id | text         | postId |
|----|--------------|--------|
| 1  | Nice post!   | 1      |
| 2  | Great work   | 1      |
| 3  | Interesting  | 3      |
```

Now, integrating the Sequelize queries with these tables:

1. **Inner Join**:
```javascript
Users.findAll({
  include: [{
    model: Posts,
    required: true
  }]
});
```

2. **Left Join**:
```javascript
Users.findAll({
  include: [{
    model: Posts,
    required: false
  }]
});
```

3. **Right Join**:
```javascript
Users.findAll({
  include: [{
    model: Posts,
    required: false,
    right: true
  }]
});
```

4. **Multiple Joins**:
```javascript
Users.findAll({
  include: [
    {
      model: Posts,
      required: true,
      include: [
        {
          model: Comments,
          required: true
        }
      ]
    }
  ]
});
```

These Sequelize queries will fetch the data from the database based on the join conditions specified.
